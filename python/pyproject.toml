[build-system]
# A list of packages that are needed to build package:
requires = [
  "setuptools >= 40.8.0",
  "wheel >= 0.33.6"
]  # REQUIRED if [build-system] table is used

build-backend = "setuptools.build_meta" 


[project]
name = "constellation"  # REQUIRED, is the only field that cannot be marked as dynamic.
version = "0.1.0"  # REQUIRED, although can be dynamic
description = "A sample Python project"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE.txt"}
keywords = ["sample", "setuptools", "development"]
authors = [
  {name = "A. Random Developer", email = "author@example.com" }
]
maintainers = [
  {name = "A. Great Maintainer", email = "maintainer@example.com" }
]
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",
  "License :: OSI Approved :: MIT License",

  # Specify the python versions you support here. These classifiers are *not*
  # checked by "pip install". See instead "requires-python" key in this file.
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
]

dependencies = [
]

# if `pip install constellation[dev]`, then the "check-manifest" will be installed
[project.optional-dependencies]
dev = ["check-manifest"]
test = ["coverage"]

[project.urls]
"Homepage" = "https://github.com/pypa/constellation"
"Bug Reports" = "https://github.com/pypa/constellation/issues"
"Funding" = "https://donate.pypi.org"
"Say Thanks!" = "http://saythanks.io/to/example"
"Source" = "https://github.com/pypa/constellation/"

# provide a command line executable called `sample`
# which executes the function `main` from this package when invoked.
[project.scripts]


# configuration specific to the `setuptools` build backend.
# If using a different build backend, you will need to change this.
[tool.setuptools]
# specify the data file needed by the package.
#package-data = {"sample" = ["*.dat"]}
